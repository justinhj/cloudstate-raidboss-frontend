# Runs Cloudstate, grpcwebproxy and the raidboss service
# so you can run the frontend against it for testing
# and development purposes

version: '3.2'

services:

  cloudstate:
    image: cloudstateio/cloudstate-proxy-dev-mode:latest
    container_name: cloudstate
    ports:
      - "9000:9000"
    command: -Dcloudstate.proxy.user-function-port=8080 -Dcloudstate.proxy.user-function-interface=raidbossservice
    networks:
      - net1

  raidbossservice:
    image: ${REGISTRY?Specify REGISTRY as an environment variable or create a .env file in this folder}/raidboss-service:latest
    container_name: raidbossservice
    environment:
      - DEBUG="cloudstate"
    networks:
      - net1

  grpcwebproxy:
    image: casperlabs/grpcwebproxy:latest
    container_name: grpcwebproxy
    ports:
      - "8080:8090"
    command: ./grpcwebproxy --run_tls_server=false --backend_addr=cloudstate:9000 --backend_tls_noverify --server_http_debug_port=8090 --allowed_origins=${ALLOWED_ORIGINS?Specify ALLOWED_ORIGINS as an environment variable or create a .env file in this folder}
    networks:
      - net1

networks:
  net1:
    driver: bridge
